{"id":"src/components/Notes/index.js","dependencies":[{"name":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\.babelrc","includedInParent":true,"mtime":1564169756666},{"name":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\package.json","includedInParent":true,"mtime":1565011255283},{"name":"react","loc":{"line":1,"column":32},"parent":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\src\\components\\Notes\\index.js","resolved":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\node_modules\\react\\index.js"},{"name":"./styles","loc":{"line":3,"column":48},"parent":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\src\\components\\Notes\\index.js","resolved":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\src\\components\\Notes\\styles.js"},{"name":"../Note","loc":{"line":4,"column":17},"parent":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\src\\components\\Notes\\index.js","resolved":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\src\\components\\Note\\index.js"},{"name":"../Error","loc":{"line":5,"column":18},"parent":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\src\\components\\Notes\\index.js","resolved":"C:\\Users\\Douglas Poma\\Documents\\htdocs\\htdocs\\PHP0aoPro\\git\\cursoReactProfissional\\notejs\\src\\components\\Error\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Notes;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _styles = require(\"./styles\");\n\nvar _Note = _interopRequireDefault(require(\"../Note\"));\n\nvar _Error = _interopRequireDefault(require(\"../Error\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction Notes(_ref) {\n  var reloadHasError = _ref.reloadHasError;\n  return _react.default.createElement(\"h1\", null, \"Notes\");\n  /* if (reloadHasError) {\n    return <Error onRetry={handleReload} />;\n  }\n  return (\n    <Fragment>\n      <NewNote>\n        <NewNoteInput\n          type=\"text\"\n          placeholder=\"Digite sua nota aqui...\"\n          value={newNote}\n          onChange={change => setNewNote(change.target.value)}\n          onKeyPress={event => {\n            if (event.key === 'Enter') {\n              handleAddNote(event.target.value);\n              setNewNote('');\n            }\n          }}\n        />\n      </NewNote>\n      <NoteList>\n        {notes.map((note, index) => (\n          <Note\n            key={uuid()}\n            note={note}\n            handleDelete={handleDelete}\n            handleMove={handleMove}\n            handleSave={handleSave}\n            index={index}\n            total={notes.length}\n          />\n        ))}\n      </NoteList>\n    </Fragment>\n  ); */\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/components/Notes/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"src/components/Notes/index.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"src/components/Notes/index.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"src/components/Notes/index.js","original":{"line":5,"column":0}},{"generated":{"line":20,"column":0},"source":"src/components/Notes/index.js","original":{"line":7,"column":15}},{"name":"Notes","generated":{"line":20,"column":9},"source":"src/components/Notes/index.js","original":{"line":7,"column":24}},{"generated":{"line":20,"column":14},"source":"src/components/Notes/index.js","original":{"line":7,"column":15}},{"generated":{"line":20,"column":21},"source":"src/components/Notes/index.js","original":{"line":7,"column":50}},{"generated":{"line":21,"column":0},"source":"src/components/Notes/index.js","original":{"line":7,"column":50}},{"name":"reloadHasError","generated":{"line":21,"column":6},"source":"src/components/Notes/index.js","original":{"line":7,"column":32}},{"generated":{"line":21,"column":20},"source":"src/components/Notes/index.js","original":{"line":7,"column":50}},{"name":"reloadHasError","generated":{"line":21,"column":28},"source":"src/components/Notes/index.js","original":{"line":7,"column":32}},{"generated":{"line":21,"column":42},"source":"src/components/Notes/index.js","original":{"line":7,"column":50}},{"generated":{"line":22,"column":0},"source":"src/components/Notes/index.js","original":{"line":8,"column":2}},{"generated":{"line":22,"column":9},"source":"src/components/Notes/index.js","original":{"line":8,"column":9}},{"generated":{"line":22,"column":58},"source":"src/components/Notes/index.js","original":{"line":8,"column":2}},{"generated":{"line":23,"column":0},"source":"src/components/Notes/index.js","original":{"line":9,"column":2}},{"generated":{"line":57,"column":0},"source":"src/components/Notes/index.js","original":{"line":43,"column":1}}],"sources":{"src/components/Notes/index.js":"import React, { Fragment } from 'react';\n\nimport { NewNote, NewNoteInput, NoteList } from './styles';\nimport Note from '../Note';\nimport Error from '../Error';\n\nexport default function Notes({ reloadHasError }) {\n  return <h1>Notes</h1>;\n  /* if (reloadHasError) {\n    return <Error onRetry={handleReload} />;\n  }\n  return (\n    <Fragment>\n      <NewNote>\n        <NewNoteInput\n          type=\"text\"\n          placeholder=\"Digite sua nota aqui...\"\n          value={newNote}\n          onChange={change => setNewNote(change.target.value)}\n          onKeyPress={event => {\n            if (event.key === 'Enter') {\n              handleAddNote(event.target.value);\n              setNewNote('');\n            }\n          }}\n        />\n      </NewNote>\n      <NoteList>\n        {notes.map((note, index) => (\n          <Note\n            key={uuid()}\n            note={note}\n            handleDelete={handleDelete}\n            handleMove={handleMove}\n            handleSave={handleSave}\n            index={index}\n            total={notes.length}\n          />\n        ))}\n      </NoteList>\n    </Fragment>\n  ); */\n}\n"},"lineCount":null}},"error":null,"hash":"872d4189121758a312972502ea8dfa43","cacheData":{"env":{}}}